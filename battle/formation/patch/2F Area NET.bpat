#new:FormationTable $FormationTable_NET {
    "GhastBoss" 00000001 $Formation_00 $Stage_Net00 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable_NET {
    "net_00" $Stage_Net00
    00000000 00000000
}

#new:Stage $Stage_Net00 {
    "net_tex"
    "net_bt01_shape"
    "net_bt01_hit"
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
}

#new:Formation $Formation_00 {
    $Ghast 00000005 0000000A 00000000 00000000 00000000 00000000
}

#new:Actor $Ghast {
[Index]        D4b 
[Level]        100`b 
[MaxHP]        50`b 
[Coins]         1`b
[Flags]       00000000 
[StatusTable] $StatusTable_Ghast
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_Ghast
[Script]      $Script_Init_Ghast
% move effectiveness
[Escape]       60`b 
[Item]         60`b 
[AirLift]      75`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         90`b  70`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:StatusTable $StatusTable_Ghast {
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      80`
    .Status:Paralyze   60`
    .Status:End
}

#new:PartsTable $PartsTable_Ghast {
    00800000 01000000 005000FF $IdleAnimations_Ghast $DefenseTable_Ghast 00000000 00000000 00F00000 00000000 
    20120001 02000000 000000FF $IdleAnimations_FireCharge $DefenseTable_FireCharge 00000000 00000000 00F00000 00000000 
}

#new:DefenseTable $DefenseTable_Ghast {
    .Element:Normal 00000000
    .Element:End
}

#new:DefenseTable $DefenseTable_FireCharge {
    .Element:Normal 00000001
    .Element:End
}

#new:IdleAnimations $IdleAnimations_Ghast {
    .Status:Normal    00EA0000
    .Status:Stone     00EA0000
    .Status:Sleep     00EA0000
    .Status:Poison    00EA0000
    .Status:Stop      00EA0000
    .Status:Static    00EA0000
    .Status:Paralyze  00EA0000
    .Status:Dizzy     00EA0000
    .Status:Fear      00EA0000
    .Status:End
}

#new:IdleAnimations $IdleAnimations_FireCharge {
    .Status:Normal   00EA0001
    .Status:End
}

#new:Script $Script_Init_Ghast {
    Call BindTakeTurn ( .Actor:Self $Script_TakeTurn_Ghast )
    Call BindIdle ( .Actor:Self $Script_Idle_Ghast )
    Call BindHandleEvent ( .Actor:Self $Script_HandleEvent_Ghast )
    Call BindNextTurn ( .Actor:Self $Script_NextTurn_Ghast )
    Return
    End
}

#new:Script $Script_NextTurn_Ghast {
    Return
    End
}

#new:Function $Function_DamageBoss5 {
    LIO t0, 800DC070
    ORI t3, r0, 0005 % hp to subtract
    ORI t6, r0, 0001
    LW t1, 00E0(t0) % start of actor pointer list, t1 is the first pointer
    LB t2, 01B8(t1) % load hp
    SUB t4, t2, t3
    SB t4, 01B8(t1)
    JR RA
    ORI v0, r0, 2
}

#new:Script $Script_TakeTurn_Ghast {
    % shoot a fire charge at Mario
    Call GetPartPos ( .Actor:Self 01 *Var0 *Var1 *Var2 )
    Sub  *Var0 20
    Add *Var1 5`
    Call SetPartPos ( .Actor:Self 02 *Var0 *Var1 *Var2 )
    Call SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
    Call SetTargetActor ( .Actor:Self .Actor:Player )
    Call SetGoalToTarget ( .Actor:Self )
    Call EnemyTestTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 0 5 10 )
    % switch
    Switch *Var0
        CaseOR == .HitResult:Miss
        CaseOR == .HitResult:Lucky
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call GetGoalPos ( .Actor:Self *Var1 *Var2 *Var3 )
            Sub *Var1 20
            Sub *Var2 20
            Call SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[5.0] )
            Call SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.1] )
            Call FlyPartTo ( .Actor:Self 2 *Var1 *Var2 *Var3 0` 0` 0 )
            Call SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
            Return
    EndSwitch
    Call GetGoalPos ( .Actor:Self *Var1 *Var2 *Var3 )
    Call SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[5.0] )
    Call SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.1] )
    Call FlyPartTo ( .Actor:Self 2 *Var1 *Var2 *Var3 0` 0` 0 )
    Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 0 0 5 20 )
    Call GetBattleFlags ( *Var0 )
    If *Var0 & 80000000 % attack was blocked
        Call SetGoalToHome ( .Actor:Self )
        Call GetGoalPos ( .Actor:Self *Var1 *Var2 *Var3 )
        Call FlyPartTo ( .Actor:Self 2 *Var1 *Var2 *Var3 0` 0` 0 )
        Call $Function_DamageBoss5 (  )
        Call PlaySound ( E1 )
        Call PlayEffect ( ~FX:ShowDamageAmount *Var1 *Var2 *Var3 10` 60` 5` )
        Wait 40`
        Call RemoveEffect ( *VarF )
    EndIf
    Call SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
    Return
    End
}

#new:Script $Script_Idle_Ghast {
    Call SetPartScale ( .Actor:Self 02 *Fixed[2.0] *Fixed[2.0] *Fixed[2.0] )
    Return
    End
}

#new:Script $Script_HandleEvent_Ghast {
    Call GetLastEvent ( .Actor:Self *Var0 )
    Switch *Var0
    Case == .Event:Death
        SetConst  *Var0  00000001 
        SetConst  *Var1  00EA0000 
        ExecWait  DoNormalHit 
        Wait  10`
        SetConst  *Var0  00000001 
        SetConst  *Var1  00EA0000 
        ExecWait  DoDeath
    Case == .Event:ShockHit
        SetConst  *Var0  00000001 
        SetConst  *Var1  00EA0000 
        ExecWait  DoShockHit 
        SetConst  *Var0  00000001 
        SetConst  *Var1  00EA0000 
        ExecWait  DoJumpBack 
        Call JumpToGoal    ( .Actor:Self  5` .False .True .False )
        Call SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
        Call SetAnimation  ( .Actor:Self 00000001 00EA0000 )
        Call SetGoalToHome ( .Actor:Self )
        Call SetActorSpeed ( .Actor:Self *Fixed[8.0] )
        Call RunToGoal     ( .Actor:Self  0` .False )
        Call SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
        Wait  5`
        Call SetAnimation  ( .Actor:Self 00000001 00EA0000 )
        Call SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
        Call JumpToGoal    ( .Actor:Self  5` .False .True .False )
    Case == .Event:ShockDeath
        SetConst  *Var0  00000001 
        SetConst  *Var1  00EA0000 
        ExecWait  DoShockHit 
        SetConst  *Var0  00000001 
        SetConst  *Var1  00EA0000 
        ExecWait  DoDeath 
    Case  ==  .Event:BurnHit % E
        BC:  		SetConst  *Var0  00000001 
        CC:  		SetConst  *Var1  00EA0000 
        DC:  		SetConst  *Var2  00EA0000 
        EC:  		ExecWait  DoBurnHit 
    Case  ==  .Event:BurnDeath % 24
       104:  		SetConst  *Var0  00000001 
       114:  		SetConst  *Var1  00EA0000 
       124:  		SetConst  *Var2  00EA0000 
       134:  		ExecWait  DoBurnHit 
       140:  		SetConst  *Var0  00000001 
       150:  		SetConst  *Var1  00EA0000 
       160:  		ExecWait  DoDeath 
    Return
    EndSwitch 
    Return
    End
}
